CSS Margins and Padding
We can use CSS margins for creating space around elements. We can also do this from the borders of our previously defined elements.

See margin1.html

Margins have multiple properties. We can build space around certain elements. We can do it from their borders if we want. We can control them individually by side. We can color them individually too.
see margin2.html

The next example is about CSS inheritance and how margins are inherited.
See margin3.html.

In margin3.html there is inheritance from a div to paragraph kaz.  The CSS styles divs to have margin-left of 50px and a skyblue border of 5px.  The h4 and p preceding the div don't style this way. Since the div contains the child element of a paragraph (kaz), there will be an inheritance potentially.  If the div had several others, they'd also inherit. The way we make this happen is by styling the internal child elements as inherit, conferring them with div's styling.

Margin Collapse--Feature?
The top and bottom margins are capable of collapsing in the form of taking up the larger margin between 2 elements. This doesn't happen on right/left (says Vickler) but does for top/bottom.

Padding in CSS
Padding adds space and a feeling of spaciousness in the contents of an element within the borders.
see example padding.html

We can use padding to generate space on all sides of the element within the defined borders. We can use the properties for setting different padding for different elements to the top,bottom,left,right sides. Padding in CSS has a length property which is used to specify the padding in cm,px,and pt.  Width is a percentage(%). These can also inherit in styling.

see padding2.html.
The width feature. Adding width property can define how much width the HTML element will have. When defined, the padding is added to width, producing unexpected results.
See example padding3.html 

CSS Width and Height
We can also set width and height properties together. They don't include borders,padding, or margins, which all impact the overall look of the site. We can set them to auto to make the default settings and let the browser calculate itself to respond to the display. These values are defined in cm and px. The value "inherit" will make the child element inherit from the parent element.
see example widthnheight.html.

If we want we can set the maximum possible width with max-width property.  We could do this in cm, px or %. If the browser is smaller than the element width, there will be a horizontal bar for scrolling on the page.  The max-width handles this situation well. It makes it more "responsive". It will also over-ride width statements.
see widthnheight2,3.html files.